# The approach used here needs to crudely parse the Issue body content. It would be nice is Issue Forms made the 
# data available in machine accessible formats, but alas it doesn't :(

# Another option is to use  https://github.com/marketplace/actions/github-issue-forms-body-parser

name: Create repository for New Hire 
on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
jobs:
  new_hire:
    if: contains(github.event.issue.labels.*.name, 'new-hire')
    name: new hire repo
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ISSUE: ${{ github.event.issue.html_url }}
    steps:
    # target handle
      - name: "Parse: TARGET_HANDLE"
        run: |
          HANDLE_RAW=$(echo "${{ github.event.issue.body }}" | grep -A2 '### New Hire handle (without @)')
          HANDLE_RAW=$(echo "=$(sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'<<<"${HANDLE_RAW}")=")
          run: echo "TARGET_HANDLE=$HANDLE_RAW" >> $GITHUB_ENV
    # target host - for now, this is crude, use the latest checkbox selected if the user for some reason selected multiple
      - name: "Parse: TARGET_HOST DotCom"
        if: contains(github.event.issue.body, '- [X] DotCom - github.com/github/support-onboarding-[handle]')
        run: |
          echo "TARGET_HOST=https://github.com" >> $GITHUB_ENV
          echo "TARGET_API=https://api.github.com/" >> $GITHUB_ENV
          echo "TARGET_ORG=github" >> $GITHUB_ENV
          echo "TARGET_PUBLIC_VISIBILITY=false" >> $GITHUB_ENV
          echo "TARGET_TOKEN=${{ secrets.NEWHIRE_SECRET_DOTCOM_TIMBURGAN }}" >> $GITHUB_ENV
      - name: "Parse: TARGET_HOST GHES"
        if: contains(github.event.issue.body, '- [X] GHES - ghe.io/new-hires/[handle]')
        run: |
          echo "TARGET_HOST=https://ghe.io" >> $GITHUB_ENV
          echo "TARGET_API=https://ghe.io/api/v3/" >> $GITHUB_ENV
          echo "TARGET_ORG=new-hires" >> $GITHUB_ENV
          echo "TARGET_PUBLIC_VISIBILITY=true" >> $GITHUB_ENV
          echo "TARGET_TOKEN=${{ secrets.NEWHIRE_SECRET_GHES_TIMBURGAN }}" >> $GITHUB_ENV
      - name: "Parse: TARGET_HOST GHAE"
        if: contains(github.event.issue.body, '- [X] GHAE - github.ghe.com/new-hires/[handle]')
        run: |
          echo "TARGET_HOST=https://github.ghe.com" >> $GITHUB_ENV
          echo "TARGET_API=https://github.ghe.com/api/v3/" >> $GITHUB_ENV
          echo "TARGET_ORG=new-hires" >> $GITHUB_ENV
          echo "TARGET_PUBLIC_VISIBILITY=true" >> $GITHUB_ENV
          echo "TARGET_TOKEN=${{ secrets.NEWHIRE_SECRET_GHAE_TIMBURGAN }}" >> $GITHUB_ENV
          
          gh issue comment $ISSUE --body "@${{ github.actor }} GHAE deployment is not supported currently. Please use the manual deployment method described in the README."
          gh issue close $ISSUE
          exit 1
          
    # target team - for now, this is crude, use the latest checkbox selected if the user for some reason selected multiple
      - name: "Parse: TARGET_TEAM S&R"
        if: contains(github.event.issue.body, '- [X] Support Engineer - Security and Revenue')
        run: echo "TARGET_TEAM=accounts-support-specialists" >> $GITHUB_ENV
      - name: "Parse: TS"
        if: contains(github.event.issue.body, '- [X] Support Engineer - Technical Support')
        run: echo "TARGET_TEAM=technical-support-engineers" >> $GITHUB_ENV
      - name: "Parse: ES"
        if: contains(github.event.issue.body, '- [X] Support Engineer - Enterprise Support')
        run: echo "TARGET_TEAM=enterprise-support-engineers" >> $GITHUB_ENV
      - name: "Parse: PS"
        if: contains(github.event.issue.body, '- [X] Support Engineer - Premium Support')
        run: echo "TARGET_TEAM=premium-support-engineers" >> $GITHUB_ENV
      - name: "Parse: CRE"
        if: contains(github.event.issue.body, '- [X] Support Engineer - Customer Reliability Engineer')
        run: echo "TARGET_TEAM=customer-reliability-engineers" >> $GITHUB_ENV
      - name: "Parse: GHAE"
        if: contains(github.event.issue.body, '- [X] Support Engineer - GHAE')
        run: echo "TARGET_TEAM=ghae-support-engineers" >> $GITHUB_ENV
      - name: "Parse: SC"
        if: contains(github.event.issue.body, '- [X] Support Contractors')
        run: echo "TARGET_TEAM=support-contractors" >> $GITHUB_ENV
      - name: "Validate: Is TARGET_HANDLE set?"
        run: |
          if [[ -z "${TARGET_HANDLE}" ]]; then
            gh issue comment $ISSUE --body "@${{ github.actor }} Deployment Error: new-hire's handle appears to be blank in the issue body above. Please edit the body, and the deployment will retry."
            exit 1
          fi
      - name: "Validate: Is TARGET_HOST set?"
        run: |
          if [[ -z "${TARGET_HOST}" ]]; then
            gh issue comment $ISSUE --body "@${{ github.actor }} Deployment Error: 'Where should the repository be created?' appears to be blank in the issue body above. Please edit the body, and the deployment will retry."
            exit 1
          fi
      - name: "Validate: Is TARGET_TEAM set?"
        run: |
          if [[ -z "${TARGET_TEAM}" ]]; then
            gh issue comment $ISSUE --body "@${{ github.actor }} Deployment Error: 'What role does new hire have?' appears to be blank in the issue body above. Please edit the body, and the deployment will retry."
            exit 1
          fi
      - name: "Deploy: get onboarder-next"
        uses: actions/checkout@v3
        with:
          repository: github/onboarder-next
      - name: "Deploy: setup ruby"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: "Deploy: Update issue with progreess"
        run: |
          # gh issue comment $ISSUE --body
          echo meh
      - name: "Deploy: edit config/settings.yml with the values within the issue"
        run: |
          mv config/settings.orig.yml config/settings.yml
          sed -i -- "s|  api_endpoint: https://ghe.io/api/v3/|  api_endpoint: $TARGET_API|g" config/settings.yml
          sed -i -- "s|  web_endpoint: https://ghe.io|  web_endpoint: $TARGET_WEB|g" config/settings.yml
          sed -i -- "s|  username: [username]|  username: timburgan|g" config/settings.yml
          sed -i -- "s|  oauth_token: [token]|  oauth_token: $TARGET_TOKEN}|g" config/settings.yml
          sed -i -- "s|  organization: new-hires|  organization: $TARGET_ORG|g" config/settings.yml
          sed -i -- "s|  department: [enterprise-support-engineers|technical-support-engineers|security-support-engineers|customer-reliability-engineers|premium-support-engineers]|  department: $TARGET_TEAM|g" config/settings.yml
          sed -i -- "s|    name: "John Doe"|    name: "@$TARGET_HANDLE"|g" config/settings.yml
          sed -i -- "s|    email: "john.doe@github.com"|    email: "$TARGET_HANDLE@github.com"|g" config/settings.yml
          sed -i -- "s|    job_title: "Enterprise|Technical|Premium|Security Support Engineer|Account Manager"|    job_title: "Support Engineer"|g" config/settings.yml
      - name: "Deploy: prepare to run"
        run: ./script/bootstrap
      - run: exit

      - name: "Deploy: Executing"
        run: rake bootstrap
      - name: "Access: Add user to org"
        run: |
          # Add user to org
          echo meh
      - name: "Access: Add buddy to org"
        run: |
          # Add buddy to org
          echo meh
